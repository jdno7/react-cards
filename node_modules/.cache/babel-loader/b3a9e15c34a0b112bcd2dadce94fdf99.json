{"ast":null,"code":"var _jsxFileName = \"/home/jdhans/springboard/exercises/react/react-cards-pokemon/src/PlayingCardList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport uuid from \"uuid\";\nimport axios from \"axios\";\nimport PlayingCard from \"./PlayingCard\";\nimport \"./PlayingCardList.css\";\nimport useAxios from \"./hooks/useAxios\";\n/* Renders a list of playing cards.\n * Can also add a new card at random. */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CardTable() {\n  _s();\n\n  const [cards, addCard] = useAxios([]); // const addCard = async () => {\n  //   const response = await axios.get(\n  //     \"https://deckofcardsapi.com/api/deck/new/draw/\"\n  //   );\n  //   setCards(cards => [...cards, { ...response.data, id: uuid() }]);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PlayingCardList\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Pick a card, any card!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addCard,\n        children: \"Add a playing card!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PlayingCardList-card-area\",\n      children: cards.map(cardData => /*#__PURE__*/_jsxDEV(PlayingCard, {\n        front: cardData.cards[0].image\n      }, cardData.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CardTable, \"zI7mlJqO/ss7DlEY8qrJQVLGGEc=\", false, function () {\n  return [useAxios];\n});\n\n_c = CardTable;\nCardTable.defaultProps = {};\nexport default CardTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardTable\");","map":{"version":3,"sources":["/home/jdhans/springboard/exercises/react/react-cards-pokemon/src/PlayingCardList.js"],"names":["React","useState","uuid","axios","PlayingCard","useAxios","CardTable","cards","addCard","map","cardData","image","id","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,uBAAP;AACA,OAAOC,QAAP,MAAqB,kBAArB;AAEA;AACA;;;;AACA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,OAAR,IAAmBH,QAAQ,CAAC,EAAD,CAAjC,CADmB,CAEnB;AACA;AACA;AACA;AACA;AACA;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAEG,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,gBACGD,KAAK,CAACE,GAAN,CAAUC,QAAQ,iBACjB,QAAC,WAAD;AAA+B,QAAA,KAAK,EAAEA,QAAQ,CAACH,KAAT,CAAe,CAAf,EAAkBI;AAAxD,SAAkBD,QAAQ,CAACE,EAA3B;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GArBQN,S;UACkBD,Q;;;KADlBC,S;AAuBTA,SAAS,CAACO,YAAV,GAAyB,EAAzB;AAEA,eAAeP,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport uuid from \"uuid\";\nimport axios from \"axios\";\nimport PlayingCard from \"./PlayingCard\";\nimport \"./PlayingCardList.css\";\nimport useAxios from \"./hooks/useAxios\";\n\n/* Renders a list of playing cards.\n * Can also add a new card at random. */\nfunction CardTable() {\n  const [cards, addCard] = useAxios([]);\n  // const addCard = async () => {\n  //   const response = await axios.get(\n  //     \"https://deckofcardsapi.com/api/deck/new/draw/\"\n  //   );\n  //   setCards(cards => [...cards, { ...response.data, id: uuid() }]);\n  // };\n  return (\n    <div className=\"PlayingCardList\">\n      <h3>Pick a card, any card!</h3>\n      <div>\n        <button onClick={addCard}>Add a playing card!</button>\n      </div>\n      <div className=\"PlayingCardList-card-area\">\n        {cards.map(cardData => (\n          <PlayingCard key={cardData.id} front={cardData.cards[0].image} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nCardTable.defaultProps = {};\n\nexport default CardTable;\n"]},"metadata":{},"sourceType":"module"}